{"version":3,"sources":["components/ChronoDisplay.js","components/ChronoButton.js","components/ChronoControls.js","components/Chrono.js","App.js","serviceWorker.js","index.js"],"names":["ChronoDisplay","time","centiseconds","Math","floor","slice","seconds","minutes","hours","ChronoButton","text","onClick","style","Button","variant","color","className","ChronoControls","status","onStart","onReset","onPause","display","Chrono","props","start","intervalHandler","setInterval","interval","state","setState","reset","paused","clearInterval","this","Card","key","chrono","id","CardText","onDelete","React","Component","App","chronos","title","project","edit","editTitle","editProject","no","cancel","handleCancel","bind","editTitleChange","editProjectChange","event","map","preventDefault","target","value","not_ahead","length","newChrono","found","find","concat","i","count","splice","newChronos","edits","Row","Col","sm","size","Form","onSubmit","handleEdit","ListGroupItem","FormGroup","Label","Input","type","placeholder","onChange","required","editCancel","Container","offset","add","htmlFor","name","CardBody","CardTitle","CardSubtitle","delete","bsStyle","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cd35d429.chunk.js","sourcesContent":["import React from 'react';\n\nconst ChronoDisplay = ({ time }) => {\n  const centiseconds = ( \"0\" + ( Math.floor( time / 10 ) % 100 )).slice( -2 );\n  const seconds = ( \"0\" + ( Math.floor( time / 1000 ) % 60 )).slice( -2 );\n  const minutes = ( \"0\" + ( Math.floor( time / 60000 ) % 60 )).slice( -2 );\n  const hours = ( \"0\" + Math.floor( time / 3600000 )).slice( -2 );\n\n  return(\n    <div>\n      <h1> { hours } : { minutes } : { seconds } : { centiseconds } </h1>\n    </div>\n  )\n}\n\nexport default ChronoDisplay\n","import React from 'react';\nimport { Button } from 'reactstrap';\n\nconst ChronoButton = ({ text, onClick, style }) => {\n  return <Button\n    onClick = { onClick }\n    style = { style }\n    variant = \"raised\"\n    color = \"primary\"\n    className = \"mx-2 my-2\"\n  >\n  { text }\n  </Button>\n}\n\nexport default ChronoButton;\n","import React from 'react';\nimport ChronoButton from './ChronoButton';\n\nconst ChronoControls = ({ status, onStart, onReset, onPause })=>{\n  return (\n    <div>\n    <ChronoButton text = \"Comenzar\"\n      onClick = { onStart }\n      style={{ display: ( status === 'Deactivated'? 'inline': 'none' )}}/>\n    <ChronoButton text = \"Pausar\"\n      style={{ display: ( status === 'Active'? 'inline': 'none')}}\n      onClick ={ onPause }/>\n    <ChronoButton text = \"Continuar\"\n      style={{ display: ( status === 'Paused'? 'inline': 'none' )}}\n      onClick ={ onStart }/>\n    <ChronoButton text = \"Reiniciar\"\n      style={{ display: ( status === 'Paused' ? 'inline': 'none' )}}\n      onClick ={ onReset }/>\n    </div>\n  )\n}\n\nexport default ChronoControls;\n","import React from 'react';\nimport ChronoDisplay from \"./ChronoDisplay.js\"\nimport ChronoControls from './ChronoControls.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Button, CardText } from 'reactstrap';\n\nclass Chrono extends React.Component{\n\n  constructor( props ){\n    super( props )\n    this.state ={\n        time: 0,\n        status: 'Paused'\n    }\n  }\n\n  start = () => {\n    this.intervalHandler = setInterval(() => {\n      const interval = this.state.time + 100\n      this.setState({\n        time: interval\n      })\n    }, 100)\n\n    this.setState({\n      status: 'Active',\n    });\n  }\n\n  reset = () => {\n    const status = this.state.status === 'Paused' ? 'Deactivated' : 'Active';\n    const time = 0\n      this.setState({\n        time: time,\n        status\n    })\n  }\n\n  paused = () => {\n    clearInterval( this.intervalHandler )\n    this.setState({\n      status: 'Paused'\n    });\n  }\n\n  render(){\n    const { time, status } = this.state;\n    return( <div>\n      <Card className=\"card text-center\" key={ this.props.chrono.id }>\n        <ChronoDisplay time = { time }/>\n        <ChronoControls\n          onStart = { this.start }\n          onReset = { this.reset }\n          onPause = { this.paused }\n          status = { status }\n        />\n        <CardText className=\"btn-align \">\n          <Button variant=\"light\" className = \"my-2 mx-2\" color = \"danger\" onClick={ this.props.onDelete }>Borrar </Button>\n        </CardText>\n      </Card>\n    </div> )\n  }\n}\n\nexport default Chrono;\n","import React, { Component } from 'react';\nimport Chrono from './components/Chrono';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col, Container, Card, CardBody, CardTitle, CardSubtitle, ListGroupItem, FormGroup, Label, Form, Button, Input } from 'reactstrap';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor( props ) {\n    super( props );\n    this.state = {\n      chronos: [\n        { id: 0,\n          title: \"Hacer proyecto\",\n          project: \"Cronometros\",\n          edit: true,\n          time: 1200,\n          status: \"Paused\"\n        },\n      ],\n      editTitle: '',\n      editProject: '',\n      edit: [],\n      no: false,\n      cancel: false\n    }\n    this.handleCancel = this.handleCancel.bind( this )\n    this.editTitleChange = this.editTitleChange.bind( this );\n    this.editProjectChange = this.editProjectChange.bind( this );\n  }\n\n  handleCancel(){\n    this.setState({\n      cancel: true,\n    })\n  }\n\n  handleEdit( id, event ) {\n    this.setState({\n      chronos: this.state.chronos.map(( chrono ) =>\n        chrono.id === id ? { id: id, title: this.state.editTitle, project: this.state.editProject } : chrono\n      ),\n      editTitle: '',\n      editProject: '',\n      edit: []\n    })\n    event.preventDefault();\n  }\n\n  editTitleChange( event ) {\n   this.setState({\n     editTitle: event.target.value\n   });\n }\n\n editProjectChange( event ) {\n   this.setState({\n     editProject: event.target.value\n   });\n }\n\n  add( event ){\n    event.preventDefault()\n    const title = event.target[ 'title' ].value\n    const project = event.target[ 'project' ].value\n    const not_ahead = this.state.cancel\n    const id = this.state.chronos.length\n\n    if( not_ahead ){\n      event.target.reset()\n      this.setState({\n        cancel: false\n      })\n    }\n    else {\n      const newChrono = {\n        id: id,\n        title: title,\n        project: project,\n        edit: true,\n        time: 0,\n        status: 'Deactivated',\n      }\n      this.setState({\n        chronos: [...this.state.chronos, newChrono],\n      })\n      event.target.reset()\n    }\n  }\n\n  editCancel(event){\n    this.setState({\n      edit: []\n    });\n    event.preventDefault();\n  }\n\n  edit( id, event ){\n    var found = this.state.chronos.find( function( chrono ) {\n      return chrono.id === id;\n    });\n    this.setState({\n      no: !this.state.no,\n      edit: this.state.edit.concat( found ),\n    });\n    event.preventDefault();\n  }\n\n  delete ( id )  {\n    const i = this.state.chronos[ id ]\n    clearInterval( i.count );\n    this.state.chronos.splice( id, 1 )\n    const newChronos = this.state.chronos.map(( chrono, id ) => {\n      if ( true ){\n        chrono.id = id\n      }\n      return chrono\n    });\n\n    this.setState({\n      chronos: newChronos\n    })\n  }\n\n  render() {\n\n    const edits =\n      <div>\n        { this.state.edit.map(( edit ) =>\n          <Row>\n            <Col sm = {{ size: 12 }}>\n              <Form onSubmit={ this.handleEdit.bind( this, edit.id )} key = { edit.id }>\n                <ListGroupItem >\n                  <FormGroup >\n                    <Label>Titulo </Label>\n                    <Input type = \"text\" placeholder = { edit.title } onChange = { this.editTitleChange } required/>\n                    <Label >Proyecto </Label>\n                    <Input type = \"text\" placeholder = { edit.project } onChange = { this.editProjectChange } required/>\n                  </FormGroup>\n                    <Button type = \"submit\" color=\"primary\" className = \"mx-3\">Actualizar </Button>\n                    <Button onClick = { this.editCancel.bind( this ) } color=\"danger\">Cancelar </Button>\n                </ListGroupItem>\n              </Form>\n            </Col>\n          </Row>\n        )}\n      </div>;\n\n    return (\n      <Container>\n        <Row>\n          <Col sm = {{ size: 6, offset: 3 }}>\n            <h1 className = \"text-center\"> Cronómetros | La app </h1>\n              <Form onSubmit = { this.add.bind( this ) } >\n                <div className = 'form-group'>\n                  <label htmlFor = \"title\">Titulo </label>\n                  <input type = \"text\" className = \"form-control\" name = \"title\" />\n                </div>\n                <div className = 'form-group'>\n                  <label htmlFor = \"project\">Proyecto </label>\n                  <input type = \"text\" className = \"form-control\" name = \"project\" />\n                </div>\n                <div className = \"flex-container\">\n                  <div className = \"item text-center my-3\">\n                    <button type = \"submit\" className = \"btn btn-primary\" name = \"go_ahead\">Crear </button>\n                  </div>\n                  <div className = \"item text-center my-3\">\n                    <button type = \"submit\" className = \"btn btn-secondary\" name = \"not_ahead\" value = { this.state.cancel } onClick = { this.handleCancel.bind( this )}>Cancelar </button>\n                  </div>\n                </div>\n              </Form>\n          </Col>\n        </Row>\n\n        { this.state.chronos.map (( chrono, id ) =>\n          <Row key = { id }>\n            <Col sm = {{ size: 6, offset: 3 }} className = \"my-4\">\n              <Form>\n                <Card>\n                  <CardBody>\n                    <CardTitle><strong>{ chrono.title }</strong></CardTitle>\n                    <CardSubtitle className = \"mb-2 text-muted\">{ chrono.project }</CardSubtitle>\n                    <Chrono\n                      chrono = { chrono }\n                      id = { id }\n                      onDelete = {() => this.delete( id )}\n                    />\n                  </CardBody>\n                  <Button onClick = { this.edit.bind( this, id ) } bsStyle = \"success\">Editar </Button>\n                </Card>\n              </Form>\n            </Col>\n          </Row>\n        )}\n\n        <Row>\n          <Col sm = {{ size: 6, offset: 3 }} className = \"my-4\">\n                { edits }\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}